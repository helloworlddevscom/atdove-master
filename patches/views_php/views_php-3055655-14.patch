diff --git a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_area.inc b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_area.inc
index 02963730..da04d5b7 100644
--- a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_area.inc
+++ b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_area.inc
@@ -34,11 +34,12 @@ class views_php_handler_area extends views_handler_area {
    * Implements views_handler_area#render().
    */
   function render($empty = FALSE) {
-    // Ecexute output PHP code.
+    // Execute output PHP code.
     if ((!$empty || !empty($this->options['empty'])) && !empty($this->options['php_output'])) {
-      $function = create_function('$view, $handler, $results', ' ?>' . $this->options['php_output'] . '<?php ');
+      $function = views_php_create_function('$view, $handler, $results', ' ?>' . $this->options['php_output'] . '<?php ');
       ob_start();
-      $function($this->view, $this, $this->view->result);
+      $closure = $function->getClosure();
+      $closure($this->view, $this, $this->view->result);
       return ob_get_clean();
     }
     return '';
diff --git a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_field.inc b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_field.inc
index a455a49b..569a0a2c 100644
--- a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_field.inc
+++ b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_field.inc
@@ -114,9 +114,10 @@ class views_php_handler_field extends views_handler_field {
   function php_pre_execute() {
     // Execute static PHP code.
     if (!empty($this->options['php_setup'])) {
-      $function = create_function('$view, $handler, &$static', $this->options['php_setup'] . ';');
+      $function = views_php_create_function('$view, $handler, &$static', $this->options['php_setup'] . ';');
       ob_start();
-      $function($this->view, $this, $this->php_static_variable);
+      $closure = $function->getClosure();
+      $closure($this->view, $this, $this->view->result);
       ob_end_clean();
     }
   }
@@ -128,7 +129,7 @@ class views_php_handler_field extends views_handler_field {
   function php_post_execute() {
     // Execute value PHP code.
     if (!empty($this->options['php_value'])) {
-      $function = create_function('$view, $handler, &$static, $row', $this->options['php_value'] . ';');
+      $function = views_php_create_function('$view, $handler, &$static, $row, $data', $this->options['php_value'] . ';');
       ob_start();
       foreach ($this->view->result as $i => &$row) {
         $normalized_row = new stdClass;
@@ -140,7 +141,8 @@ class views_php_handler_field extends views_handler_field {
             $normalized_row->$field = isset($row->{$handler->field_alias}) ? $row->{$handler->field_alias} : NULL;
           }
         }
-        $row->{$this->field_alias} = $function($this->view, $this, $this->php_static_variable, $normalized_row);
+        $closure = $function->getClosure();
+        $row->{$this->field_alias} = $closure($this->view, $this, $this->php_static_variable, $normalized_row, $row);
       }
       ob_end_clean();
     }
@@ -149,7 +151,8 @@ class views_php_handler_field extends views_handler_field {
     if (!empty($this->options['use_php_click_sortable']) && !empty($this->php_click_sort_order)) {
       if ($this->options['use_php_click_sortable'] == self::CLICK_SORT_PHP) {
         if (!empty($this->options['php_click_sortable'])) {
-          $this->php_click_sort_function = create_function('$view, $handler, &$static, $row1, $row2', $this->options['php_click_sortable'] . ';');
+          $this->php_click_sort_function = views_php_create_function('$view, $handler, &$static, $row1, $row2', $this->options['php_click_sortable'] . ';');
+          $this->php_click_sort_function_predefined = FALSE;
         }
       }
       else {
@@ -160,7 +163,7 @@ class views_php_handler_field extends views_handler_field {
           self::CLICK_SORT_NAT => 'strnatcasecmp',
           self::CLICK_SORT_NAT_CASE => 'strnatcmp',
         );
-        $this->php_click_sort_function = $predefined[$this->options['use_php_click_sortable']];
+        $this->php_click_sort_function_predefined = TRUE;
       }
 
       if (isset($this->php_click_sort_function)) {
@@ -183,7 +186,14 @@ class views_php_handler_field extends views_handler_field {
         }
       }
       ob_start();
-      $result = (int)$function($this->view, $this, $this->php_static_variable, $normalized_row1, $normalized_row2);
+      if ($this->php_click_sort_function_predefined) {
+        $closure = $function->getClosure();
+        $result = (int)$closure($this->view, $this, $this->php_static_variable, $normalized_row1, $normalized_row2);
+      }
+      else {
+        $closure = $function->getClosure();
+        $result = (int)$closure($this->view, $this, $this->php_static_variable, $normalized_row1, $normalized_row2);
+      }
       ob_end_clean();
     }
     else {
@@ -204,7 +214,7 @@ class views_php_handler_field extends views_handler_field {
    */
   function render($values) {
     if (!empty($this->options['php_output'])) {
-      $this->php_output_lamda_function = create_function('$view, $handler, &$static, $row, $data, $value', ' ?>' . $this->options['php_output'] . '<?php ');
+      $this->php_output_lamda_function = views_php_create_function('$view, $handler, &$static, $row, $data, $value', ' ?>' . $this->options['php_output'] . '<?php ');
 
       $normalized_row = new stdClass;
       if (empty($this->view->style_plugin->rendered_fields)) {
@@ -218,10 +228,10 @@ class views_php_handler_field extends views_handler_field {
           $normalized_row->$field = $value;
         }
       }
-
       $function = $this->php_output_lamda_function;
       ob_start();
-      $function($this->view, $this, $this->php_static_variable, $normalized_row, $values, isset($values->{$this->field_alias}) ? $values->{$this->field_alias} : NULL);
+      $closure = $function->getClosure();
+      $closure($this->view, $this, $this->php_static_variable, $normalized_row, $values, isset($values->{$this->field_alias}) ? $values->{$this->field_alias} : NULL);
       $value = ob_get_clean();
     }
     else {
diff --git a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_filter.inc b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_filter.inc
index 0c97a92b..50948e37 100644
--- a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_filter.inc
+++ b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_filter.inc
@@ -63,11 +63,12 @@ class views_php_handler_filter extends views_handler_filter {
    * @see views_php_views_pre_execute()
    */
   function php_pre_execute() {
-    // Ecexute static PHP code.
+    // Execute static PHP code.
     if (!empty($this->options['php_setup'])) {
-      $function = create_function('$view, $handler, &$static', $this->options['php_setup'] . ';');
+      $function = views_php_create_function('$view, $handler, &$static, $row, $data', $this->options['php_filter'] . ';');
       ob_start();
-      $function($this->view, $this, $this->php_static_variable);
+      $closure = $function->getClosure();
+      $closure($this->view, $this, $this->php_static_variable);
       ob_end_clean();
     }
   }
@@ -79,7 +80,7 @@ class views_php_handler_filter extends views_handler_filter {
   function php_pre_render() {
     // Evaluate the PHP code.
     if (!empty($this->options['php_filter'])) {
-      $function = create_function('$view, $handler, &$static, $row, $data', $this->options['php_filter'] . ';');
+      $function = views_php_create_function('$view, $handler, &$static, $row, $data', $this->options['php_filter'] . ';');
       ob_start();
 
       $normalized_row = new stdClass;
@@ -87,8 +88,8 @@ class views_php_handler_filter extends views_handler_filter {
         foreach ($this->view->field as $id => $field) {
           $normalized_row->$id = $this->view->field[$id]->theme($result);
         }
-
-        if ($function($this->view, $this, $this->php_static_variable, $normalized_row, $result)) {
+        $closure = $function->getClosure();
+        if ($closure($this->view, $this, $this->php_static_variable, $normalized_row, $result)) {
           unset($this->view->result[$i]);
         }
       }
diff --git a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_sort.inc b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_sort.inc
index cca24ba0..02ae3183 100644
--- a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_sort.inc
+++ b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_handler_sort.inc
@@ -55,11 +55,12 @@ class views_php_handler_sort extends views_handler_sort {
    * @see views_php_views_pre_execute()
    */
   function php_pre_execute() {
-    // Ecexute static PHP code.
+    // Execute static PHP code.
     if (!empty($this->options['php_setup'])) {
-      $function = create_function('$view, $handler, &$static', $this->options['php_setup'] . ';');
+      $function = views_php_create_function('$view, $handler, &$static', $this->options['php_setup'] . ';');
       ob_start();
-      $function($this->view, $this, $this->php_static_variable);
+      $closure = $function->getClosure();
+      $closure($this->view, $this, $this->php_static_variable);
       ob_end_clean();
     }
   }
@@ -70,7 +71,7 @@ class views_php_handler_sort extends views_handler_sort {
    */
   function php_post_execute() {
     if (!empty($this->options['php_sort']) && $this->view->style_plugin->build_sort()) {
-      $this->php_sort_function = create_function('$view, $handler, &$static, $row1, $row2', $this->options['php_sort'] . ';');
+      $this->php_sort_function = views_php_create_function('$view, $handler, &$static, $row1, $row2', $this->options['php_sort'] . ';');
       ob_start();
       usort($this->view->result, array($this, 'php_sort'));
       ob_end_clean();
@@ -89,7 +90,8 @@ class views_php_handler_sort extends views_handler_sort {
         $$normalized_name->$field = isset($$name->{$handler->field_alias}) ? $$name->{$handler->field_alias} : NULL;
       }
     }
-    $result = (int)$function($this->view, $this, $this->php_static_variable, $normalized_row1, $normalized_row2);
+    $closure = $function->getClosure();
+    $result = (int)$closure($this->view, $this, $this->php_static_variable, $normalized_row1, $normalized_row2);
     return $factor * $result;
   }
 }
diff --git a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_plugin_cache.inc b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_plugin_cache.inc
index ca6c90f5..5cb80406 100644
--- a/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_plugin_cache.inc
+++ b/docroot/sites/all/modules/contrib/views_php/plugins/views/views_php_plugin_cache.inc
@@ -63,9 +63,10 @@ class views_php_plugin_cache extends views_plugin_cache {
         $cache = cache_get($this->get_results_key(), $this->table);
         $fresh = !empty($cache);
         if ($fresh && !empty($this->options['php_cache_results'])) {
-          $function = create_function('$view, $plugin, $cache', $this->options['php_cache_results'] . ';');
+          $function = views_php_create_function('$view, $plugin, $cache', $this->options['php_cache_results'] . ';');
           ob_start();
-          $fresh = $function($this->view, $this, $cache);
+          $closure = $function->getClosure();
+          $fresh = $closure($this->view, $this, $cache);
           ob_end_clean();
         }
         // Values to set: $view->result, $view->total_rows, $view->execute_time,
@@ -84,9 +85,10 @@ class views_php_plugin_cache extends views_plugin_cache {
         $cache = cache_get($this->get_output_key(), $this->table);
         $fresh = !empty($cache);
         if ($fresh && !empty($this->options['php_cache_output'])) {
-          $function = create_function('$view, $plugin, $cache', $this->options['php_cache_output'] . ';');
+          $function = views_php_create_function('$view, $plugin, $cache', $this->options['php_cache_output'] . ';');
           ob_start();
-          $fresh = $function($this->view, $this, $cache);
+          $closure = $function->getClosure();
+          $fresh = $closure($this->view, $this, $cache);
           ob_end_clean();
         }
         if ($fresh) {
diff --git a/docroot/sites/all/modules/contrib/views_php/views_php.info b/docroot/sites/all/modules/contrib/views_php/views_php.info
index 277faec1..38c85d75 100644
--- a/docroot/sites/all/modules/contrib/views_php/views_php.info
+++ b/docroot/sites/all/modules/contrib/views_php/views_php.info
@@ -3,6 +3,7 @@ description = Allows the usage of PHP to construct a view.
 package = Views
 core = 7.x
 dependencies[] = views
+dependencies[] = libraries
 ; Views handlers
 files[] = plugins/views/views_php_handler_area.inc
 files[] = plugins/views/views_php_handler_field.inc
diff --git a/docroot/sites/all/modules/contrib/views_php/views_php.module b/docroot/sites/all/modules/contrib/views_php/views_php.module
index 53bd5263..3c0de283 100644
--- a/docroot/sites/all/modules/contrib/views_php/views_php.module
+++ b/docroot/sites/all/modules/contrib/views_php/views_php.module
@@ -27,11 +27,12 @@ function views_php_check_access($php_access, $view_name, $display_id, $account =
   }
 
   if (!isset($function[$view_name . ':' . $display_id])) {
-    $function[$view_name . ':' . $display_id] = create_function('$view_name, $display_id, $account', $php_access . ';');
+    $function[$view_name . ':' . $display_id] = views_php_create_function('$view_name, $display_id, $account', $php_access . ';');
   }
 
   ob_start();
-  $access = (bool) $function[$view_name . ':' . $display_id]($view_name, $display_id, $account);
+  $closure = $function[$view_name . ':' . $display_id]->getClosure();
+  $access = (bool) $closure($view_name, $display_id, $account);
   ob_end_clean();
   return $access;
 }
@@ -167,3 +168,34 @@ function views_php_views_post_build($view) {
     $view->build_info['query']->range();
   }
 }
+
+/**
+ * Implements hook_libraries_info().
+ */
+function views_php_libraries_info() {
+  return array(
+    'closure' => array(
+      'name' => 'Opis Closure',
+      'vendor url' => 'https://opis.io/closure',
+      'download url' => 'https://opis.io/closure',
+      'version arguments' => array(
+        'file' => 'CHANGELOG.md',
+        'pattern' => '/### v([\d\.]+)/',
+        'lines' => 5,
+      ),
+      'files' => array(
+        'php' => array('autoload.php'),
+      ),
+    ),
+  );
+}
+
+/**
+ * Internal support: create_function() emulation using an anonymous function with a serializable wrapper.
+ */
+function views_php_create_function($args, $code) {
+  libraries_load('closure');
+  $plain = \Opis\Closure\SerializableClosure::createClosure($args, $code);
+  $serializable = \Opis\Closure\SerializableClosure::from($plain);
+  return $serializable;
+}
